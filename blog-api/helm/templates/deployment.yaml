apiVersion: apps/v1aplha1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-{{ .Values.deployEnv }}
spec:
  replicas: {{ .Values.api.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      environment: {{ .Values.deployEnv }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      log-name: {{ .Chart.Name }}-{{ .Values.deployEnv }}
    spec:
      containers:
        - name: app
          image: {{ .Values.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: BUILD
              value: '{{ .Values.buildId }}'
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-{{ .Values.deployEnv }}-config
                optional: false
          resources:
            # Not set up:
#            limits:
#              memory: {{ .Values.api.resources.limits.memory }}
#              cpu: {{ .Values.api.resources.limits.cpu }}
#            requests:
#              memory: {{ .Values.api.resources.requests.memory }}
#              cpu: {{ .Values.api.resources.requests.cpu }}
            livenessProbe:
              periodSeconds: 5
              failureThreshold: 5
              httpGet:
                path: /status
                port: 8000
            readinessProbe:
              periodSeconds: 5
              httpGet:
                path: /status
                port: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-{{ .Values.deployEnv }}
spec:
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  selector:
    app: {{ .Chart.Name }}
    environment: {{ .Values.deployEnv }}
